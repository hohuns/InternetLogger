{"ast":null,"code":"var _jsxFileName = \"/Users/sungjaejoo/Desktop/Protek/\\u110B\\u1167\\u11AB\\u1109\\u1173\\u11B8\\u1111\\u1161\\u110B\\u1175\\u11AF/Web/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/InterLogger original/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport NoteList from \"./components/NoteList\";\nimport AddNote from \"./components/AddNote\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [note, setNote] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [error, setError] = useState(null);\n  const correctPw = \"0623\"; //Fetching Data from API\n\n  const fetchNoteHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/noteTest.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `You logged at ${data[key].date}...`\n        });\n      }\n\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchNoteHandler();\n  }, [fetchNoteHandler]);\n\n  const pwHandler = pw => {\n    if (pw === correctPw) {\n      setIsCorrect(true);\n    }\n\n    console.log(pw);\n  }; //Adding logger\n\n\n  async function addNoteHandler() {\n    const response = await fetch(\"https://react-http-2887f-default-rtdb.firebaseio.com/noteTest.json\", {\n      method: \"POST\",\n      body: JSON.stringify(note),\n      headers: {\n        \"Content-Type\": \"appication/json\"\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n    fetchNoteHandler();\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Found no Notes.\");\n\n  if (note.length > 0) {\n    content = /*#__PURE__*/React.createElement(NoteList, {\n      note: note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, !isCorrect ? /*#__PURE__*/React.createElement(Login, {\n    pw: pwHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Log Format\"), /*#__PURE__*/React.createElement(AddNote, {\n    AddNote: addNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchNoteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Update Notes\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Log\"), content)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sungjaejoo/Desktop/Protek/연습파일/Web/리액트/리액트 프로젝트/InterLogger original/src/App.js"],"names":["React","useState","useEffect","useCallback","NoteList","AddNote","Login","App","note","setNote","isLoading","setIsLoading","isCorrect","setIsCorrect","error","setError","correctPw","fetchNoteHandler","response","fetch","ok","Error","data","json","loadedNotes","key","push","id","title","text","date","reverse","console","log","message","pwHandler","pw","addNoteHandler","method","body","JSON","stringify","headers","content","color","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMe,SAAS,GAAG,MAAlB,CALa,CAOb;;AACA,QAAMC,gBAAgB,GAAGd,WAAW,CAAC,YAAY;AAC/CQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,IAAlB,EAAwB;AACtBE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,KAAK,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,KAFF;AAGfC,UAAAA,IAAI,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,IAHD;AAIfC,UAAAA,IAAI,EAAG,iBAAgBR,IAAI,CAACG,GAAD,CAAJ,CAAUK,IAAK;AAJvB,SAAjB;AAMD;;AACDN,MAAAA,WAAW,CAACO,OAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACAf,MAAAA,OAAO,CAACe,WAAD,CAAP;AACD,KArBD,CAqBE,OAAOV,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACD;;AACDvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA5BmC,EA4BjC,EA5BiC,CAApC;AA8BAT,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;;AAIA,QAAMkB,SAAS,GAAIC,EAAD,IAAQ;AACxB,QAAIA,EAAE,KAAKpB,SAAX,EAAsB;AACpBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACDmB,IAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACD,GALD,CA1Ca,CAiDb;;;AACA,iBAAeC,cAAf,GAAgC;AAC9B,UAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAD0B,EAE1B;AACEmB,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejC,IAAf,CAFR;AAGEkC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHX,KAF0B,CAA5B;AAUA,UAAMpB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAL,IAAAA,gBAAgB;AACjB;;AAED,MAAI0B,OAAO,gBAAG;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAd;;AACA,MAAIpC,IAAI,CAACqC,MAAL,GAAc,CAAlB,EAAqB;AACnBF,IAAAA,OAAO,gBAAG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEnC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,MAAIM,KAAJ,EAAW;AACT6B,IAAAA,OAAO,gBAAG;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B9B,KAA/B,CAAV;AACD;;AAED,MAAIJ,SAAJ,EAAe;AACbiC,IAAAA,OAAO,gBAAG;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAV;AACD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAChC,SAAD,gBACC,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAEuB,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEP,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEpB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEGD,OAFH,CATF,CAJJ,CADF;AAsBD;;AAED,eAAepC,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport NoteList from \"./components/NoteList\";\nimport AddNote from \"./components/AddNote\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nfunction App() {\n  const [note, setNote] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [error, setError] = useState(null);\n  const correctPw = \"0623\";\n\n  //Fetching Data from API\n  const fetchNoteHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-2887f-default-rtdb.firebaseio.com/noteTest.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedNotes = [];\n      for (const key in data) {\n        loadedNotes.push({\n          id: key,\n          title: data[key].title,\n          text: data[key].text,\n          date: `You logged at ${data[key].date}...`,\n        });\n      }\n      loadedNotes.reverse();\n      console.log(loadedNotes);\n      setNote(loadedNotes);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchNoteHandler();\n  }, [fetchNoteHandler]);\n\n  const pwHandler = (pw) => {\n    if (pw === correctPw) {\n      setIsCorrect(true);\n    }\n    console.log(pw);\n  };\n\n  //Adding logger\n  async function addNoteHandler() {\n    const response = await fetch(\n      \"https://react-http-2887f-default-rtdb.firebaseio.com/noteTest.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(note),\n        headers: {\n          \"Content-Type\": \"appication/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    fetchNoteHandler();\n  }\n\n  let content = <p style={{ color: \"white\" }}>Found no Notes.</p>;\n  if (note.length > 0) {\n    content = <NoteList note={note} />;\n  }\n\n  if (error) {\n    content = <p style={{ color: \"white\" }}>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p style={{ color: \"white\" }}>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      {!isCorrect ? (\n        <Login pw={pwHandler}></Login>\n      ) : (\n        <div>\n          {\" \"}\n          <section>\n            <h2 style={{ color: \"white\" }}>Log Format</h2>\n            <AddNote AddNote={addNoteHandler}></AddNote>\n          </section>\n          <section>\n            <button onClick={fetchNoteHandler}>Update Notes</button>\n          </section>\n          <section>\n            <h2 style={{ color: \"white\" }}>Log</h2>\n            {content}\n          </section>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}